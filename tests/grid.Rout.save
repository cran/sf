
R version 3.3.2 (2016-10-31) -- "Sincere Pumpkin Patch"
Copyright (C) 2016 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # MULTIPOLYGONS
> library(sf)
Linking to GEOS 3.5.0, GDAL 2.1.0
> library(grid)
> nc = st_read(system.file("shape/nc.shp", package="sf"))
Reading layer `nc' from data source `/home/edzer/git/sf.Rcheck/sf/shape/nc.shp' using driver `ESRI Shapefile'
converted into: MULTIPOLYGON
Simple feature collection with 100 features and 14 fields
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    4267
proj4string:    +proj=longlat +datum=NAD27 +no_defs
> grid.newpage()
> # pushViewport(viewport(width = 0.8, height = 0.8))
> pushViewport(st_viewport(nc))
> invisible(lapply(st_geometry(nc), function(x) grid.draw(st_as_grob(x, gp = gpar(fill = 'red')))))
> 
> # POLYGONS
> # nc = st_read(system.file("gpkg/nc.gpkg", package="sf"), "nc.gpkg", type = 3)
> nc = st_read(system.file("shape/nc.shp", package="sf"), type = 3)
Reading layer `nc' from data source `/home/edzer/git/sf.Rcheck/sf/shape/nc.shp' using driver `ESRI Shapefile'
converted into: POLYGON
Simple feature collection with 100 features and 14 fields
geometry type:  POLYGON
dimension:      XY
bbox:           xmin: -84.32385 ymin: 33.88199 xmax: -75.45698 ymax: 36.58965
epsg (SRID):    4267
proj4string:    +proj=longlat +datum=NAD27 +no_defs
> grid.newpage()
> pushViewport(st_viewport(nc))
> invisible(lapply(st_geometry(nc), function(x) grid.draw(st_as_grob(x, gp = gpar(fill = 'red')))))
> 
> # POINTS:
> data(meuse, package = "sp")
> meuse_sf = st_as_sf(meuse, coords = c("x", "y"), crs = 28992, relation_to_geometry = "field")
> grid.newpage()
> pushViewport(st_viewport(meuse_sf))
> invisible(lapply(st_geometry(meuse_sf), 
+ 	function(x) grid.draw(st_as_grob(x, gp = gpar(fill = 'red')))))
> 
> 
> # MULTIPOINTS
> mp = st_multipoint(cbind(runif(100), runif(100)))
> grid.newpage()
> pushViewport(st_viewport(mp))
> grid.draw(st_as_grob(mp, gp = gpar(fill = 'red')))
> 
> # LINESTRING
> ls = st_linestring(cbind(1:10, rnorm(10)))
> grid.newpage()
> pushViewport(st_viewport(ls))
> grid.draw(st_as_grob(ls, gp = gpar(fill = 'red')))
> 
> # MULTILINESTRING
> ls = st_multilinestring(list(cbind(1:10, 5+rnorm(10)), cbind(1:10, rnorm(10)), cbind(1:10, -5+rnorm(10))))
> grid.newpage()
> pushViewport(st_viewport(ls))
> grid.draw(st_as_grob(ls, gp = gpar(fill = 'red')))
> 
> # POINTS, right aspect in Long/Lat:
> meuse_ll = st_transform(meuse_sf, 4326)
> grid.newpage()
> pushViewport(st_viewport(meuse_ll))
> invisible(lapply(st_geometry(meuse_ll), 
+ 	function(x) grid.draw(st_as_grob(x, gp = gpar(fill = 'red')))))
> 
> # WRONG aspect:
> st_crs(meuse_ll) = NA
> grid.newpage()
> pushViewport(st_viewport(meuse_ll))
> invisible(lapply(st_geometry(meuse_ll), 
+ 	function(x) grid.draw(st_as_grob(x, gp = gpar(fill = 'red')))))
> 
> proc.time()
   user  system elapsed 
  0.760   0.016   0.774 
